/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 */

lib = library(identifier: 'jenkins@6.3.0', retriever: modernSCM([

    $class: 'GitSCMSource',
    remote: 'https://github.com/opensearch-project/opensearch-build-libraries.git',
]))

pipeline {
    options {
        timeout(time: 5, unit: 'HOURS')
        buildDiscarder(logRotator(daysToKeepStr: '30'))
    }
    agent none
    environment {
        GITHUB_TOKEN = credentials('GITHUB_TOKEN')
    }
    stages {
        stage('integ-test') {
            agent any
            steps {
                script {
                    echo 'Cloning Functional test repository...'
                    git branch: 'Issue-972-integration', url: 'https://github.com/manasvinibs/opensearch-dashboards-functional-test.git'
                    echo 'Running Orchestrator script to trigger remote cypress workflows...'
                    sh './integtest.sh'
                    echo 'Orchestrator workflow run completed '
                }
            }
            post {
                always {
                    postCleanup()
                }
            }
        }
    }

    post {
        success {
            node('fork') {
                script {
                    def stashed = lib.jenkins.Messages.new(this).get(['integ-test'])
                    postCleanup()
                }
            }
        }
        failure {
            node('fork') {
                script  {
                    def stashed = lib.jenkins.Messages.new(this).get(['integ-test'])
                    postCleanup()
                }
            }
        }
    }
}
